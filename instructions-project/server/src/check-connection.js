import sequelize from './config/database.js';
import 'dotenv/config';

/**
 * Script para verificar qual base de dados est√° a ser usada
 * Mostra informa√ß√µes sobre a conex√£o atual
 * 
 * Uso: node src/check-connection.js
 */

async function checkConnection() {
  try {
    console.log('üîç Verificando conex√£o com a base de dados...');
    console.log('');
    
    // Mostrar configura√ß√£o do .env
    console.log('üìã Configura√ß√£o atual:');
    console.log('   DB_HOST:', process.env.DB_HOST || 'localhost');
    console.log('   DB_PORT:', process.env.DB_PORT || '5433');
    console.log('   DB_NAME:', process.env.DB_NAME || 'instructions_demo');
    console.log('   DB_USER:', process.env.DB_USER || 'demo_user');
    console.log('');
    
    // Testar conex√£o
    await sequelize.authenticate();
    console.log('‚úÖ Conex√£o estabelecida com sucesso!');
    console.log('');
    
    // Obter informa√ß√µes da conex√£o real
    var config = sequelize.config;
    console.log('üåê Informa√ß√µes da conex√£o:');
    console.log('   Host:', config.host);
    console.log('   Port:', config.port);
    console.log('   Database:', config.database);
    console.log('   Dialect:', config.dialect);
    console.log('');
    
    // Verificar se √© localhost ou remoto
    var isRemote = config.host !== 'localhost' && config.host !== '127.0.0.1';
    
    if (isRemote) {
      console.log('‚úÖ EST√Å A USAR A BASE DE DADOS ONLINE (VM Google Cloud)');
      console.log('   IP:', config.host);
      console.log('');
      console.log('üí° Isto significa que:');
      console.log('   - Todos os desenvolvedores veem os mesmos dados');
      console.log('   - Altera√ß√µes s√£o sincronizadas em tempo real');
      console.log('   - Requer liga√ß√£o √† internet');
    } else {
      console.log('üìå EST√Å A USAR A BASE DE DADOS LOCAL');
      console.log('   Host:', config.host);
      console.log('');
      console.log('üí° Para usar a base de dados online:');
      console.log('   - Altere DB_HOST no .env para: 35.239.46.72');
    }
    console.log('');
    
    // Mostrar timestamp atual da BD para confirmar que est√° conectado
    var result = await sequelize.query("SELECT NOW() as current_time, current_database() as database_name, inet_server_addr() as server_ip, inet_server_port() as server_port", { type: sequelize.QueryTypes.SELECT });
    
    if (result && result[0]) {
      console.log('üìä Informa√ß√µes do servidor PostgreSQL:');
      console.log('   Hora atual do servidor:', result[0].current_time);
      console.log('   Base de dados:', result[0].database_name);
      if (result[0].server_ip) {
        console.log('   IP do servidor:', result[0].server_ip);
      }
      if (result[0].server_port) {
        console.log('   Porta do servidor:', result[0].server_port);
      }
    }
    console.log('');
    
  } catch (error) {
    console.error('‚ùå Erro ao conectar:', error.message);
    console.log('');
    console.log('üí° Verifique:');
    console.log('   1. Credenciais no .env est√£o corretas');
    console.log('   2. Liga√ß√£o √† internet (se usar base de dados remota)');
    console.log('   3. PostgreSQL est√° a correr (se usar localhost)');
    process.exit(1);
  } finally {
    await sequelize.close();
  }
}

checkConnection();

